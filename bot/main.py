import aiogram
import asyncio,aiosqlite
from aiogram import Bot, Dispatcher, executor, types
from config import *
from buttons import *
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import State, StatesGroup

########## States - start  ##########
class rate(StatesGroup):
    name = State()
    number = State()
    text = State()
    type = State()

########## States - END ##########


bot=Bot(token=token,parse_mode=types.ParseMode.HTML,disable_web_page_preview=True)
dp = Dispatcher(bot,storage=MemoryStorage())



########## - HANDLERS of state ##########
@dp.message_handler(content_types=['text'], state = rate.name)
async def get_channel_id(message,state: FSMContext):
    
    if message.text == '–û—Ç–º–µ–Ω–∞ ‚ùå':
        await bot.send_message(message.chat.id,'–û—Ç–º–µ–Ω–µ–Ω ‚ùé',reply_markup=menu)
        await state.finish()
        return

    else:
        await bot.send_message(message.chat.id,'<i>–í–∞—à–µ –∏–º—è: ...</i>')
        global otziv_text
        otziv_text = str(message.text)
        await rate.number.set()

        

########## - HANDLERS of state ##########

@dp.message_handler(content_types=['text'], state = rate.number)
async def get_channel_id(message,state: FSMContext):
    if message.text == '–û—Ç–º–µ–Ω–∞ ‚ùå':
        await bot.send_message(message.chat.id,'–û—Ç–º–µ–Ω–µ–Ω ‚ùé',reply_markup=menu)
        await state.finish()
        return
    else:
        await bot.send_message(message.chat.id,'<i>–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ...</i>')
        global type_of_rev
        type_of_rev =str(message.text)
        await rate.type.set()
########## - HANDLERS of state ##########

@dp.message_handler(content_types=['text'], state = rate.type)
async def get_channel_id(message,state: FSMContext):
    if message.text == '–û—Ç–º–µ–Ω–∞ ‚ùå':
        await bot.send_message(message.chat.id,'–û—Ç–º–µ–Ω–µ–Ω ‚ùé',reply_markup=menu)
        await state.finish()
        return
    else:
        await bot.send_message(message.chat.id,'<i>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –∫–µ–º –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å</i>',reply_markup=type_of_reviewer)
        global users_name
        users_name =str(message.text)
        await rate.text.set()
########## - HANDLERS of state ##########

@dp.message_handler(content_types=['text'], state = rate.text)
async def get_channel_id(message,state: FSMContext):
    if message.text == '–û—Ç–º–µ–Ω–∞ ‚ùå':
        await bot.send_message(message.chat.id,'–û—Ç–º–µ–Ω–µ–Ω ‚ùé',reply_markup=types.ReplyKeyboardRemove())
        await start_command(message)
        await state.finish()
        return
    else:
        global number
        number = str(message.text)
        await state.finish()
        await bot.send_message(Admins_id,f"""#–æ—Ç–∑—ã–≤ {number}\n\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: <b>{users_name}</b>\n–∏–º—è: <b>{type_of_rev}</b>\n–æ—Ç–∑—ã–≤: <b>{otziv_text}</b>\n""",reply_markup=types.ReplyKeyboardRemove())
        await bot.send_message(message.chat.id,"–≤–∞—à –æ—Ç–∑—ã–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É...",reply_markup=types.ReplyKeyboardRemove())

########## - HANDLERS of START COMMAND - START ##########

@dp.message_handler(commands=['start'])
async def start_command(message):
    await bot.send_photo(message.chat.id,"https://t.me/saveruz/12",caption="""<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –∫ –Ω–∞—à–µ–º—É –±–æ—Ç—É!</b>
        
<i>–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –º–µ–Ω—é!</i> """,reply_markup=menu)
########## - HANDLERS of START COMMAND - END ##########



########## new update text handler  --  START ##########
@dp.message_handler(content_types=['text'])
async def text_update(message):
    if message.text == "TAN298":
        await bot.send_message(message.chat.id,"ooo axir siz TAN muxlisisizku malades")
        await bot.send_message(message.chat.id,"üôÇ")
        
    else:
            await bot.send_message(message.chat.id,'<i>–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</i>')
########## new update text handler -- END ##########

########## END - STATE handler ##########
@dp.callback_query_handler()
async def callbacks(call: types.CallbackQuery):

    if call.data == 'info':
        await bot.send_message(call.message.chat.id,"""–≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞...   """,reply_markup=menu_of_allInfos)

    elif call.data == 'information':
        await bot.send_message(call.message.chat.id,"""<b>298 - School</b>
<i>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</i> <b>+998712494877</b>
<i>A–¥—Ä–µ—Å:</i> <b>Olmazor tumani Beruniy B-1</b>

- - - - - - - - -

<i>–ó–∞–Ω—è—Ç–∏—è –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏ —É–∑–±–µ–∫—Å–∫–æ–º —è–∑—ã–∫–∞—Ö. 
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—â–∏—Ö—Å—è ‚Äì –±–æ–ª–µ–µ 3200. 
–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç 95 –∫–ª–∞—Å—Å–æ–≤. 
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π ‚Äì 135. –ò–∑ –Ω–∏—Ö 7 –æ–±–ª–∞–¥–∞—Ç–µ–ª–µ–π –≤—ã—Å—à–∏—Ö, 24 1-–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, 35 2-–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤.</i>
""")
    elif call.data == 'location':
        await bot.copy_message(call.message.chat.id, '-1001576387195', 13)        
    elif call.data == 'rate':
        await rate.name.set()
        await bot.send_message(call.message.chat.id,'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –æ—Ç–∑—ã–≤...',reply_markup=cancel)
    ##################2
    elif call.data == 'teachers':
        await bot.send_message(call.message.chat.id,"""<code>1. –ê–º–µ—Ç–æ–≤–∞ –û–ª—å–≥–∞ –ê–Ω–∞—Ç–æ–ª—å–µ–≤–Ω–∞ 
2. –ê–±–¥—É—Ä–∞—Å—É–ª–æ–≤–∞ –ì—É–ª—à–æ–¥–∞ –ê–±–¥—É—Ä–∞—Å—É–ª–æ–≤–Ω–∞
3. –ì–∞–Ω–∏–µ–≤–∞ –ì—É–ª–∞–Ω–¥–æ–º –•—É—Å–Ω–∏–¥–¥–∏–Ω–æ–≤–Ω–∞
4. –ó–∏–º–∏–Ω–∞ –®–∞—Ö–Ω–æ–∑–∞ –®–∞–º–∏—Ä–∑–∞–µ–≤–Ω–∞
5. –£—Ä–æ–∫–æ–≤ –ñ–∞–º—à–∏–¥ –ú–∞—Ö–º–∞–¥–∏—ë—Ä–æ–≤–∏—á
6. –†—É–∑–º–∞—Ç–æ–≤–∞ –î—É—Ä–¥–æ–Ω–∞ –†—É—Å—Ç–∞–º–æ–≤–Ω–∞
7. –°–∞–º–∞—Ç–æ–≤–∞ –ó–∞–π–Ω—É—Ä–∞ –ù–µ—ä–º–∞—Ç–æ–≤–Ω–∞ </code>""")
        
    elif call.data == 'IT':
        await bot.edit_message_reply_markup(call.message.chat.id,call.message.message_id,reply_markup=LessonsMenu_IT)
    elif call.data == 'RUSSIAN':
        await bot.edit_message_reply_markup(call.message.chat.id,call.message.message_id,reply_markup=LessonsMenu_russia)
    elif call.data == 'ENGLISH':
        await bot.edit_message_reply_markup(call.message.chat.id,call.message.message_id,reply_markup=LessonsMenu_english)
    elif call.data == 'ss':
        pass

    elif call.data=='table':
        await bot.send_message(call.message.chat.id,"""<b>1 - —Å–º–µ–Ω–∞ </b>
<i>—É—Ä–æ–∫–∏ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è - <code>8:00</code>

—É—Ä–æ–∫–∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è - <code>13:05</code></i>
-  -  -   -   -   -
<b>2 - —Å–º–µ–Ω–∞ </b>
<i>—É—Ä–æ–∫–∏ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è - <code>13:20</code>

—É—Ä–æ–∫–∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è - <code>18:20</code></i>

""",reply_markup=classes)



    #####Classes
##############################    CALL.DATA -  start ##############################
    elif call.data == 'C1class':
        
        await bot.edit_message_reply_markup(call.message.chat.id,call.message.message_id,reply_markup=Class_1)
    elif call.data == 'C2class':
        
        await bot.edit_message_reply_markup(call.message.chat.id,call.message.message_id,reply_markup=Class_2)
    elif call.data == 'C3class':
        
        await bot.edit_message_reply_markup(call.message.chat.id,call.message.message_id,reply_markup=Class_3)
    elif call.data == 'C4class':
        
        await bot.edit_message_reply_markup(call.message.chat.id,call.message.message_id,reply_markup=Class_4)
    elif call.data == 'C5class':
        
        await bot.edit_message_reply_markup(call.message.chat.id,call.message.message_id,reply_markup=Class_5)
    elif call.data == 'C6class':
        
        await bot.edit_message_reply_markup(call.message.chat.id,call.message.message_id,reply_markup=Class_6)
    elif call.data == 'C7class':
        
        await bot.edit_message_reply_markup(call.message.chat.id,call.message.message_id,reply_markup=Class_7)
    elif call.data == 'C8class':
        
        await bot.edit_message_reply_markup(call.message.chat.id,call.message.message_id,reply_markup=Class_8)
    elif call.data == 'C9class':
        
        await bot.edit_message_reply_markup(call.message.chat.id,call.message.message_id,reply_markup=Class_9)
    elif call.data == 'C10class':
        
        await bot.edit_message_reply_markup(call.message.chat.id,call.message.message_id,reply_markup= Class_10)
    elif call.data == 'C11class':
        
        await bot.edit_message_reply_markup(call.message.chat.id,call.message.message_id,reply_markup= Class_11)
    elif call.data == 'menuu':
        await bot.delete_message(call.message.chat.id,call.message.message_id)
        await start_command(call.message)
    else:
        
        try:
            if 'week' in call.data:
                myday = call.data.replace('week_','day')
                print(myday)
                classes_name = '9_a'
                with open(f'{classes_name}/{myday}.txt') as f:
                    lines = f.read()
                    await bot.delete_message(call.message.chat.id,call.message.message_id)
                    await bot.send_message(call.message.chat.id,lines,reply_markup= week_days)
            else:
                await bot.send_message(call.message.chat.id,".",reply_markup= week_days)

                classes_name = call.data
        except Exception as e:
            print(e)
        
##############################    CALL.DATA -  END ##############################






##############################   START BOT ##############################

if __name__ == '__main__':
    print("Started ")
    executor.start_polling(dp, skip_updates=False)